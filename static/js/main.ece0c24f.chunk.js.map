{"version":3,"sources":["CityNameForm.js","WeatherResult.js","App.js","index.js"],"names":["CityNameForm","props","handleChange","bind","handleSubmit","event","this","onCityNameChange","target","value","preventDefault","onCityNameSubmission","className","onSubmit","type","cityName","onChange","React","Component","WeatherResult","weather","city","country","src","icon","alt","main","description","temp","now","feels_like","min","max","App","state","handleCityNameChange","handleCityNameSubmission","setState","getWeather","then","data","sys","name","Math","round","temp_min","temp_max","catch","error","Error","fetch","mode","weatherResponse","json","ReactDOM","render","document","getElementById"],"mappings":"4VA6CeA,G,kBAzCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,0EAONE,GACXC,KAAKL,MAAMM,iBAAiBF,EAAMG,OAAOC,S,mCAG9BJ,GACXA,EAAMK,iBACNJ,KAAKL,MAAMU,yB,0CAIXL,KAAKL,MAAMU,yB,+BAIX,OACE,yBAAKC,UAAU,kBACb,0BAAMC,SAAUP,KAAKF,cACnB,uCAGA,2BACEU,KAAK,OACLL,MAAOH,KAAKL,MAAMc,SAClBC,SAAUV,KAAKJ,eAEjB,sD,GAjCiBe,IAAMC,YC2BlBC,G,uLAzBX,OACE,yBAAKP,UAAU,kBACb,0BAAMA,UAAU,gBACbN,KAAKL,MAAMmB,QAAQC,KADtB,KAC8Bf,KAAKL,MAAMmB,QAAQE,SAEjD,yBACEC,IAAG,2CAAsCjB,KAAKL,MAAMmB,QAAQI,KAAzD,WACHC,IAAG,UAAKnB,KAAKL,MAAMmB,QAAQM,KAAxB,WAEL,0BAAMd,UAAU,eACbN,KAAKL,MAAMmB,QAAQM,KADtB,KAC8BpB,KAAKL,MAAMmB,QAAQO,YADjD,KAGA,0BAAMf,UAAU,YACbN,KAAKL,MAAMmB,QAAQQ,KAAKC,IAD3B,UAGA,6CACevB,KAAKL,MAAMmB,QAAQQ,KAAKE,WADvC,SAEE,6BAFF,QAGQxB,KAAKL,MAAMmB,QAAQQ,KAAKG,IAHhC,iBAGgDzB,KAAKL,MAAMmB,QAAQQ,KAAKI,IAHxE,e,GAjBoBf,IAAMC,YCkFnBe,G,kBA/Eb,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KACDiC,MAAQ,CACXnB,SAAU,SACVK,QAAS,CACPM,KAAM,KACNC,YAAa,KACbH,KAAM,KACNF,QAAS,KACTD,KAAM,KACNO,KAAM,CACJC,IAAK,KACLC,WAAY,KACZC,IAAK,KACLC,IAAK,QAKX,EAAKG,qBAAuB,EAAKA,qBAAqBhC,KAA1B,gBAC5B,EAAKiC,yBAA2B,EAAKA,yBAAyBjC,KAA9B,gBApBf,E,kFAuBEY,GACnBT,KAAK+B,SAAS,CAACtB,SAAUA,M,iDAGC,IAAD,OACzBT,KAAKgC,WAAWhC,KAAK4B,MAAMnB,UAAUwB,MAAK,SAAAC,GACxC,EAAKH,SAAS,CACZjB,QAAS,CACPM,KAAMc,EAAKpB,QAAQ,GAAGM,KACtBC,YAAaa,EAAKpB,QAAQ,GAAGO,YAC7BH,KAAMgB,EAAKpB,QAAQ,GAAGI,KACtBF,QAASkB,EAAKC,IAAInB,QAClBD,KAAMmB,EAAKE,KACXd,KAAM,CACJC,IAAKc,KAAKC,MAAMJ,EAAKd,KAAKE,MAC1BE,WAAYa,KAAKC,MAAMJ,EAAKd,KAAKI,YACjCC,IAAKY,KAAKC,MAAMJ,EAAKd,KAAKmB,UAC1Bb,IAAKW,KAAKC,MAAMJ,EAAKd,KAAKoB,iBAI/BC,OAAM,SAAAC,GACP,MAAM,IAAIC,MAAM,uC,0EAIHlC,G,kGAEiBmC,MAAM,qDAAD,OAAsDnC,EAAtD,wDAAsH,CAACoC,KAAM,S,cAA1JC,E,gBACgBA,EAAgBC,O,cAAhCjC,E,yBAECA,G,wCAED,IAAI6B,MAAM,iD,gJAKlB,IAAMlC,EAAWT,KAAK4B,MAAMnB,SAE5B,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,CACEG,SAAUA,EACVR,iBAAkBD,KAAK6B,qBACvBxB,qBAAsBL,KAAK8B,2BAG7B,kBAAC,EAAD,CACEhB,QAASd,KAAK4B,MAAMd,e,GAzEZH,IAAMC,YCAxBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ece0c24f.chunk.js","sourcesContent":["import React from 'react';\nimport './CityNameForm.css';\n\nclass CityNameForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.onCityNameChange(event.target.value);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onCityNameSubmission();\n  }\n\n  componentDidMount() {\n    this.props.onCityNameSubmission();\n  }\n\n  render() {\n    return (\n      <div className=\"City-name-form\">\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            City\n          </label>\n          <input\n            type=\"text\"\n            value={this.props.cityName}\n            onChange={this.handleChange}\n          />\n          <button>\n            Get weather!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default CityNameForm;\n","import React from 'react';\nimport './WeatherResult.css';\n\nclass WeatherResult extends React.Component {\n  render() {\n    return (\n      <div className=\"Weather-result\">\n        <span className=\"City-country\">\n          {this.props.weather.city}, {this.props.weather.country}\n        </span>\n        <img\n          src={`http://openweathermap.org/img/wn/${this.props.weather.icon}@2x.png`}\n          alt={`${this.props.weather.main} icon`}\n        />\n        <span className=\"Description\">\n          {this.props.weather.main} ({this.props.weather.description})\n        </span>\n        <span className=\"Temp-now\">\n          {this.props.weather.temp.now} ºC\n        </span>\n        <span>\n          Feels like: {this.props.weather.temp.feels_like} ºC\n          <br />\n          Min: {this.props.weather.temp.min} ºC / Max: {this.props.weather.temp.max} ºC\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default WeatherResult;\n","import React from 'react';\nimport CityNameForm from './CityNameForm';\nimport WeatherResult from './WeatherResult';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: 'Madrid',\n      weather: {\n        main: null,\n        description: null,\n        icon: null,\n        country: null,\n        city: null,\n        temp: {\n          now: null,\n          feels_like: null,\n          min: null,\n          max: null\n        }\n      }\n  };\n\n    this.handleCityNameChange = this.handleCityNameChange.bind(this);\n    this.handleCityNameSubmission = this.handleCityNameSubmission.bind(this);\n  }\n\n  handleCityNameChange(cityName) {\n    this.setState({cityName: cityName});\n  }\n\n  handleCityNameSubmission() {\n    this.getWeather(this.state.cityName).then(data => {\n      this.setState({\n        weather: {\n          main: data.weather[0].main,\n          description: data.weather[0].description,\n          icon: data.weather[0].icon,\n          country: data.sys.country,\n          city: data.name,\n          temp: {\n            now: Math.round(data.main.temp),\n            feels_like: Math.round(data.main.feels_like),\n            min: Math.round(data.main.temp_min),\n            max: Math.round(data.main.temp_max)\n          }\n        }\n      });\n    }).catch(error => {\n      throw new Error('Plese enter a proper location!');\n    });\n  }\n\n  async getWeather(cityName) {\n    try {\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=e3ea2dd667a7bb272bb5b629e7d922db`, {mode: 'cors'});\n      const weather = await weatherResponse.json();\n\n      return weather;\n    } catch (error) {\n      throw new Error('Something went wrong, please try again later!');\n    }\n  }\n\n  render() {\n    const cityName = this.state.cityName;\n\n    return (\n      <div className=\"App\">\n        <CityNameForm\n          cityName={cityName}\n          onCityNameChange={this.handleCityNameChange}\n          onCityNameSubmission={this.handleCityNameSubmission}\n        />\n\n        <WeatherResult\n          weather={this.state.weather}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}